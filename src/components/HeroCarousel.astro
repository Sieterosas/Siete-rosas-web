---
import { Image } from '@astrojs/image/components';

interface Img {
  src: string;
  alt?: string;
}

interface Props {
  images: Img[];       // [{ src: '/hero/hero1.jpg', alt: '...' }, ...]
  interval?: number;   // milisegundos entre cambios (por defecto 5000)
  height?: string;     // altura tailwind opcional, ej. "h-[70vh]"
}

const { images = [], interval = 5000, height = "h-[70vh]" } = Astro.props;

// Evita fallos si no hay imágenes
const safeImages = images.length > 0
  ? images
  : [{ src: "/hero/hero1.jpg", alt: "Hero" }];
---

<div class={`relative ${height} w-full overflow-hidden`} data-carousel>
  {safeImages.map((img, i) => (
    <div
      class={`absolute inset-0 transition-opacity duration-700 ease-in-out ${i === 0 ? 'opacity-100 z-10' : 'opacity-0 z-0'}`}
      data-slide
    >
      <Image
        src={img.src}
        alt={img.alt ?? ''}
        width={1920}
        height={1080}
        format="webp"
        class="w-full h-full object-cover select-none"
        loading={i === 0 ? 'eager' : 'lazy'}
        decoding="async"
      />
      <!-- Degradado sutil para legibilidad de textos superpuestos (opcional) -->
      <div class="pointer-events-none absolute inset-0 bg-gradient-to-b from-black/20 via-black/10 to-black/30"></div>
    </div>
  ))}

  <!-- Indicadores (puntos) -->
  <div class="absolute bottom-4 left-1/2 -translate-x-1/2 flex gap-2 z-20">
    {safeImages.map((_, i) => (
      <span class={`h-2 w-2 rounded-full bg-white/60 transition-all ${i === 0 ? 'w-5 bg-white' : ''}`} data-dot></span>
    ))}
  </div>
</div>

<script is:inline>
  // Carrusel automático con fade
  const root = document.currentScript.previousElementSibling;
  const slides = root.querySelectorAll('[data-slide]');
  const dots = root.querySelectorAll('[data-dot]');
  if (slides.length > 0) {
    let i = 0;
    const show = (idx) => {
      slides.forEach((s, j) => {
        s.classList.toggle('opacity-100', j === idx);
        s.classList.toggle('z-10', j === idx);
        s.classList.toggle('opacity-0', j !== idx);
        s.classList.toggle('z-0', j !== idx);
      });
      dots.forEach((d, j) => {
        d.classList.toggle('w-5', j === idx);
        d.classList.toggle('bg-white', j === idx);
        d.classList.toggle('bg-white/60', j !== idx);
        d.classList.toggle('w-2', j !== idx);
      });
    };
    show(0);

    const INTERVAL = Number({interval}) || 5000;
    setInterval(() => {
      i = (i + 1) % slides.length;
      show(i);
    }, INTERVAL);
  }
</script>
