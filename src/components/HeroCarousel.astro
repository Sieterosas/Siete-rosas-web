---
interface Props {
  images: string[];
  interval?: number;
}
const { images = [], interval = 5000 } = Astro.props as Props;
const carouselId = "hero-" + Math.random().toString(36).slice(2);
---

<section id={carouselId} class="relative w-full h-[80vh] overflow-hidden" data-interval={interval}>
  {images.map((src, idx) => (
    <img
      src={src}
      alt={`Hero ${idx + 1}`}
      loading={idx === 0 ? "eager" : "lazy"}
      class={`hero-slide absolute inset-0 w-full h-full object-cover transition-opacity duration-700 ${
        idx === 0 ? "opacity-100" : "opacity-0"
      }`}
    />
  ))}

  <!-- Velo para lectura del texto -->
  <div class="absolute inset-0 bg-gradient-to-b from-black/40 via-black/20 to-black/50"></div>

  <!-- Texto central -->
  <div class="relative z-10 h-full flex flex-col items-center justify-center text-center text-white px-4">
    <h1 class="text-4xl sm:text-5xl md:text-6xl font-extrabold drop-shadow">
      FOTOGRAFÍA DE EVENTOS
    </h1>
    <p class="mt-5 max-w-2xl text-base sm:text-lg text-stone-100/95">
      Historias reales con luz natural y estilo elegante.
    </p>
  </div>

  <!-- Puntos -->
  <div class="absolute bottom-6 left-1/2 -translate-x-1/2 flex gap-2 z-10">
    {images.map((_, idx) => (
      <span class={`hero-dot h-2 w-2 rounded-full ${idx === 0 ? "bg-white" : "bg-white/50"}`}></span>
    ))}
  </div>

  <!-- JS inline con serialización correcta -->
  <script is:inline>
    const images = JSON.parse(`{JSON.stringify(images)}`);
    const id = `{carouselId}`;
    const interval = {interval};

    const root = document.getElementById(id);
    if (root && images.length > 1) {
      const slides = Array.from(root.querySelectorAll('.hero-slide'));
      const dots = Array.from(root.querySelectorAll('.hero-dot'));
      let i = 0;

      function show(n) {
        slides.forEach((s, k) => s.classList.toggle('opacity-0', k !== n));
        dots.forEach((d, k) => {
          d.classList.toggle('bg-white', k === n);
          d.classList.toggle('bg-white/50', k !== n);
        });
      }

      setInterval(() => {
        i = (i + 1) % slides.length;
        show(i);
      }, interval);
    }
  </script>
</section>
